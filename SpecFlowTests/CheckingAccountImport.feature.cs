// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.239
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace QuestMaster.EasyBankToYnab.DomainTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Import of checking account statements")]
    public partial class ImportOfCheckingAccountStatementsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CheckingAccountImport.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Import of checking account statements", "In order to update my list of transactions\r\nAs a user\r\nI want to import CSV files" +
                    " from EasyBank", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Statement"});
            table1.AddRow(new string[] {
                        "1",
                        "20010203008;Abbuchung Onlinebanking                      BG/000002236#14000 06710" +
                            "704145 Margit Obermaier;12.07.2011;11.07.2011;-33,00;EUR"});
            table1.AddRow(new string[] {
                        "2",
                        "20010203008;easykreditkarte MasterCard      000000       MC/000002237;12.07.2011;" +
                            "11.07.2011;-757,70;EUR"});
            table1.AddRow(new string[] {
                        "3",
                        "20010203008;Apotheke                                     BG/000002235#14200 20010" +
                            "351775 Dirk Rombauts;09.07.2011;08.07.2011;-23,89;EUR"});
            table1.AddRow(new string[] {
                        "4",
                        "20010203008;Kindle Books                                 BG/000002234#14200 20010" +
                            "306702 Tatjana Habusta;09.07.2011;08.07.2011;+21,64;EUR"});
            table1.AddRow(new string[] {
                        "5",
                        "20010203008;000006773435                                 OG/000002231#32000 00900" +
                            "699090 ORANGE AUSTRIA;06.07.2011;05.07.2011;-24,10;EUR"});
            table1.AddRow(new string[] {
                        "6",
                        "20010203008;Abbuchung Lastschrift                        OG/000002230#WIENER LINI" +
                            "EN GMBH & CO KG          20151 00696216225;06.07.2011;05.07.2011;-45,80;EUR"});
            table1.AddRow(new string[] {
                        "7",
                        "20010203008;Hornbach                                     BG/000002233#14200 20010" +
                            "351775 Dirk Rombauts;06.07.2011;05.07.2011;-9,25;EUR"});
            table1.AddRow(new string[] {
                        "8",
                        "20010203008;Kienbacher                                   BG/000002232#14200 20010" +
                            "351775 Dirk Rombauts;06.07.2011;05.07.2011;-489,00;EUR"});
            table1.AddRow(new string[] {
                        "9",
                        "20010203008;Abbuchung Einzugsermächtigung                OG/000002229#BASLER VERS" +
                            "ICHERUNGS-AG             32000 00000062141;05.07.2011;04.07.2011;-50,00;EUR"});
            table1.AddRow(new string[] {
                        "10",
                        "20010203008;Kindle Books                                 BG/000002228#14200 20010" +
                            "306702 Tatjana Habusta;05.07.2011;04.07.2011;+23,26;EUR"});
            table1.AddRow(new string[] {
                        "11",
                        "20010203008;Abbuchung Einzugsermächtigung                OG/000002227#AMAZON EU S" +
                            "ARL                      19100 00040593000;02.07.2011;01.07.2011;-16,31;EUR"});
            table1.AddRow(new string[] {
                        "12",
                        "20010203008;TRN         20110701RX003134#I7452070                                " +
                            "     VB/000002225#Walter Rombauts                     14000 00118804139;02.07.20" +
                            "11;01.07.2011;-250,00;EUR"});
            table1.AddRow(new string[] {
                        "13",
                        "20010203008;TRN         20110701RX003135#I7452063                                " +
                            "     VB/000002226#Walter Rombauts                     14000 00118804139;02.07.20" +
                            "11;01.07.2011;-250,00;EUR"});
#line 7
  testRunner.Given("the following statements", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Booking Date",
                        "Account",
                        "Description",
                        "Payee",
                        "Value Date",
                        "Amount In",
                        "Amount Out",
                        "Currency",
                        "Is New"});
            table2.AddRow(new string[] {
                        "1",
                        "2011-07-12",
                        "20010203008",
                        "Abbuchung Onlinebanking BG/000002236",
                        "14000 06710704145 Margit Obermaier",
                        "2011-07-11",
                        "0.00",
                        "33.00",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "2",
                        "2011-07-12",
                        "20010203008",
                        "easykreditkarte MasterCard 000000 MC/000002237",
                        "",
                        "2011-07-11",
                        "0.00",
                        "757.70",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "3",
                        "2011-07-09",
                        "20010203008",
                        "Apotheke BG/000002235",
                        "14200 20010351775 Dirk Rombauts",
                        "2011-07-08",
                        "0.00",
                        "23.89",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "4",
                        "2011-07-09",
                        "20010203008",
                        "Kindle Books BG/000002234",
                        "14200 20010306702 Tatjana Habusta",
                        "2011-07-08",
                        "21.64",
                        "0",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "5",
                        "2011-07-06",
                        "20010203008",
                        "000006773435 OG/000002231",
                        "32000 00900699090 ORANGE AUSTRIA",
                        "2011-07-05",
                        "0.00",
                        "24.10",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "6",
                        "2011-07-06",
                        "20010203008",
                        "Abbuchung Lastschrift OG/000002230",
                        "WIENER LINIEN GMBH & CO KG 20151 00696216225",
                        "2011-07-05",
                        "0.00",
                        "45.80",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "7",
                        "2011-07-06",
                        "20010203008",
                        "Hornbach BG/000002233",
                        "14200 20010351775 Dirk Rombauts",
                        "2011-07-05",
                        "0.00",
                        "9.25",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "8",
                        "2011-07-06",
                        "20010203008",
                        "Kienbacher BG/000002232",
                        "14200 20010351775 Dirk Rombauts",
                        "2011-07-05",
                        "0.00",
                        "489.00",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "9",
                        "2011-07-05",
                        "20010203008",
                        "Abbuchung Einzugsermächtigung OG/000002229",
                        "BASLER VERSICHERUNGS-AG 32000 00000062141",
                        "2011-07-04",
                        "0.00",
                        "50.00",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "10",
                        "2011-07-05",
                        "20010203008",
                        "Kindle Books BG/000002228",
                        "14200 20010306702 Tatjana Habusta",
                        "2011-07-04",
                        "23.26",
                        "0",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "11",
                        "2011-07-02",
                        "20010203008",
                        "Abbuchung Einzugsermächtigung OG/000002227",
                        "AMAZON EU SARL 19100 00040593000",
                        "2011-07-01",
                        "0.00",
                        "16.31",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "12",
                        "2011-07-02",
                        "20010203008",
                        "TRN 20110701RX003134",
                        "I7452070 VB/000002225 Walter Rombauts 14000 00118804139",
                        "2011-07-01",
                        "0",
                        "250.00",
                        "EUR",
                        "True"});
            table2.AddRow(new string[] {
                        "13",
                        "2011-07-02",
                        "20010203008",
                        "TRN 20110701RX003135",
                        "I7452063 VB/000002226 Walter Rombauts 14000 00118804139",
                        "2011-07-01",
                        "0.00",
                        "250.00",
                        "EUR",
                        "True"});
#line 23
  testRunner.And("these expected entries", ((string)(null)), table2);
#line hidden
        }
        
        public virtual void ImportCheckingAccountStatements(string statement, string entry, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import checking account statements", exampleTags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 41
  testRunner.Given("I have an account with number \'20010203008\'");
#line 42
  testRunner.When(string.Format("I import statement \'{0}\'", statement));
#line 43
  testRunner.Then(string.Format("that account should contain entry \'{0}\'", entry));
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 1")]
        public virtual void ImportCheckingAccountStatements_1()
        {
            this.ImportCheckingAccountStatements("1", "1", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 2")]
        public virtual void ImportCheckingAccountStatements_2()
        {
            this.ImportCheckingAccountStatements("2", "2", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 3")]
        public virtual void ImportCheckingAccountStatements_3()
        {
            this.ImportCheckingAccountStatements("3", "3", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 4")]
        public virtual void ImportCheckingAccountStatements_4()
        {
            this.ImportCheckingAccountStatements("4", "4", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 5")]
        public virtual void ImportCheckingAccountStatements_5()
        {
            this.ImportCheckingAccountStatements("5", "5", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 6")]
        public virtual void ImportCheckingAccountStatements_6()
        {
            this.ImportCheckingAccountStatements("6", "6", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 7")]
        public virtual void ImportCheckingAccountStatements_7()
        {
            this.ImportCheckingAccountStatements("7", "7", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 8")]
        public virtual void ImportCheckingAccountStatements_8()
        {
            this.ImportCheckingAccountStatements("8", "8", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 9")]
        public virtual void ImportCheckingAccountStatements_9()
        {
            this.ImportCheckingAccountStatements("9", "9", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 10")]
        public virtual void ImportCheckingAccountStatements_10()
        {
            this.ImportCheckingAccountStatements("10", "10", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 11")]
        public virtual void ImportCheckingAccountStatements_11()
        {
            this.ImportCheckingAccountStatements("11", "11", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 12")]
        public virtual void ImportCheckingAccountStatements_12()
        {
            this.ImportCheckingAccountStatements("12", "12", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Import checking account statements, 13")]
        public virtual void ImportCheckingAccountStatements_13()
        {
            this.ImportCheckingAccountStatements("13", "13", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
