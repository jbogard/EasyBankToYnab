// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.261
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace QuestMaster.EasyBankToYnab.DomainTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Export of credit card account entries")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ExportOfCreditCardAccountEntriesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreditCardAccountExport.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Export of credit card account entries", "In order to update my list of transactions\r\nAs a user\r\nI want to export my entrie" +
                    "s to YNAB", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Export of credit card account entries")))
            {
                QuestMaster.EasyBankToYnab.DomainTests.ExportOfCreditCardAccountEntriesFeature.FeatureSetupMsTest(null);
            }
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetupMsTest(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            new ExportOfCreditCardAccountEntriesFeature().FeatureSetup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDownMsTest()
        {
            new ExportOfCreditCardAccountEntriesFeature().FeatureTearDown();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Export credit card account entries")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Export credit card account entries")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Export of credit card account entries")]
        public virtual void ExportCreditCardAccountEntries()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Export credit card account entries", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
  testRunner.Given("I have an account with number \'20000134083\'");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Booking Date",
                        "Account",
                        "Description",
                        "Payee",
                        "Value Date",
                        "Amount In",
                        "Amount Out",
                        "Currency",
                        "Is New"});
            table1.AddRow(new string[] {
                        "2011-06-29",
                        "20000134083",
                        "USD 7,35 55432861179000422081119",
                        "Manipulationsentgelt",
                        "2011-06-28",
                        "0.00",
                        "0.05",
                        "EUR",
                        "True"});
            table1.AddRow(new string[] {
                        "2011-06-29",
                        "20000134083",
                        "USD 7,35 55432861179000422081119",
                        "Amazon Services-Kindle 866-321-8851",
                        "2011-06-28",
                        "0.00",
                        "5.18",
                        "EUR",
                        "True"});
            table1.AddRow(new string[] {
                        "2011-06-28",
                        "20000134083",
                        "95505511177040364736255",
                        "SONY ONLINE SERVICES INTERNET",
                        "2011-06-24",
                        "0.00",
                        "15.00",
                        "EUR",
                        "True"});
            table1.AddRow(new string[] {
                        "2011-06-24",
                        "20000134083",
                        "USD 7,20 55432861172000042272210",
                        "Manipulationsentgelt",
                        "2011-06-21",
                        "0.00",
                        "0.05",
                        "EUR",
                        "True"});
            table1.AddRow(new string[] {
                        "2011-06-24",
                        "20000134083",
                        "USD 7,20 55432861172000042272210",
                        "Amazon Services-Kindle 866-321-8851",
                        "2011-06-21",
                        "0.00",
                        "5.03",
                        "EUR",
                        "True"});
            table1.AddRow(new string[] {
                        "2011-06-24",
                        "20000134083",
                        "75494041172005182779231",
                        "ORANGE AUSTRIA WIEN",
                        "2011-06-20",
                        "0.00",
                        "5",
                        "EUR",
                        "True"});
            table1.AddRow(new string[] {
                        "2011-06-21",
                        "20000134083",
                        "USD 23,31 55432861169000494943859",
                        "Manipulationsentgelt",
                        "2011-06-18",
                        "0.00",
                        "0.16",
                        "EUR",
                        "True"});
            table1.AddRow(new string[] {
                        "2011-06-21",
                        "20000134083",
                        "USD 23,31 55432861169000494943859",
                        "Amazon Services-Kindle 866-321-8851",
                        "2011-06-18",
                        "0.00",
                        "16.47",
                        "EUR",
                        "True"});
            table1.AddRow(new string[] {
                        "2011-06-20",
                        "20000134083",
                        "05460651169061800530249",
                        "OESTERR.BUNDESBAHNEN WIEN",
                        "2011-06-17",
                        "0.00",
                        "16",
                        "EUR",
                        "True"});
            table1.AddRow(new string[] {
                        "2011-06-20",
                        "20000134083",
                        "GBP 70,96 55504431167083109723160",
                        "Manipulationsentgelt",
                        "2011-06-16",
                        "0.00",
                        "0.81",
                        "EUR",
                        "True"});
            table1.AddRow(new string[] {
                        "2011-06-20",
                        "20000134083",
                        "GBP 70,96 55504431167083109723160",
                        "FORGE WORLD NOTTINGHAM",
                        "2011-06-16",
                        "0.00",
                        "80.57",
                        "EUR",
                        "True"});
#line 8
  testRunner.And("the following entries in the account with number \'20000134083\'", ((string)(null)), table1);
#line 21
  testRunner.When("I export all new entries from the account with number \'20000134083\'");
#line hidden
#line 22
  testRunner.Then("the result should be", @"Date,Category,Payee,Memo,Outflow,Inflow                                                                       
28.06.2011,Import Statements,Manipulationsentgelt,USD 7-35 55432861179000422081119,0.05,0.00                  
28.06.2011,Import Statements,Amazon Services-Kindle 866-321-8851,USD 7-35 55432861179000422081119,5.18,0.00   
24.06.2011,Import Statements,SONY ONLINE SERVICES INTERNET,95505511177040364736255,15.00,0.00                 
21.06.2011,Import Statements,Manipulationsentgelt,USD 7-20 55432861172000042272210,0.05,0.00                  
21.06.2011,Import Statements,Amazon Services-Kindle 866-321-8851,USD 7-20 55432861172000042272210,5.03,0.00   
20.06.2011,Import Statements,ORANGE AUSTRIA WIEN,75494041172005182779231,5.00,0.00                            
18.06.2011,Import Statements,Manipulationsentgelt,USD 23-31 55432861169000494943859,0.16,0.00                 
18.06.2011,Import Statements,Amazon Services-Kindle 866-321-8851,USD 23-31 55432861169000494943859,16.47,0.00 
17.06.2011,Import Statements,OESTERR.BUNDESBAHNEN WIEN,05460651169061800530249,16.00,0.00                     
16.06.2011,Import Statements,Manipulationsentgelt,GBP 70-96 55504431167083109723160,0.81,0.00                 
16.06.2011,Import Statements,FORGE WORLD NOTTINGHAM,GBP 70-96 55504431167083109723160,80.57,0.00              ", ((TechTalk.SpecFlow.Table)(null)));
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
